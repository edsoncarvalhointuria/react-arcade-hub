# Nome do nosso fluxo de trabalho
name: Deploy React App to GitHub Pages

on:
  # Roda sempre que voc√™ fizer um push para a branch 'main'
  push:
    branches: ["main"]

  # Permite que voc√™ rode este fluxo manualmente pela aba Actions
  workflow_dispatch:

# Define as permiss√µes que o nosso "rob√¥" ter√°
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # O trabalho de build, que prepara o jogo
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Usa uma vers√£o recente do Node.js
          cache: 'npm'

      - name: Install dependencies
        run: npm install
      
      - name: Build üîß
        run: npm run build
        env: # Injeta as chaves secretas no processo de build
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Faz o upload da pasta 'dist' que o Vite criou
          path: './dist'

  # O trabalho de deploy, que coloca o jogo no ar
  deploy:
    needs: build # S√≥ roda DEPOIS que o 'build' terminar com sucesso
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages üöÄ
        id: deployment
        uses: actions/deploy-pages@v4
